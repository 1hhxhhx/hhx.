#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <bits/stdc++.h>
#include <stack>
using namespace std;


#define int long long
int p=10007;
int n;
int dp[1010101],s[1001010],inv[1010010];
int qmi(int a,int k)
{
    int sum = 1;
    while(k)
    {
        if(k&1)
        {
            sum =(long long)sum*a%p;
        }
        a = (long long)a*a%p;
        k>>=1;
    }
    return sum;
}
int c(int a,int b)
{
    if(a<b)
    {
        return 0;
    }
    return dp[a] * inv[b] %p * inv[a-b] %p;
}
int lucas(int a,int b)
{
    if(a<b)
    {
        return 0;
    }
    if(a<p&&b<p)
        return c(a,b);
    return c(a%p,b%p)*lucas(a/p,b/p)%p;
}
signed main()
{
    cin>>n;
    dp[0] = dp[1] = inv[0] = inv[1] = 1;
    for(int i = 2 ;i< p ;i++)
    {
        dp[i] = dp[i-1]*i%p;
        inv[i] = qmi(dp[i],p-2);
    }
    for(int i = 0;i < n;i ++)
    {
        if(i & 1)
        {
            s[n-1-(i >> 1)]	= i+1;
        }
        else
        {
            s[(i >> 1)] = i + 1;
        }
    }
    int ans = 0;
    for(int i = 0;i < n;i ++)
    {
        ans = (ans +s[i] %p * lucas(n-1,i) %p) %p;
    }
    printf("%d\n",ans);
}