#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <bits/stdc++.h>
#include <stack>
using namespace std;


#define int long long
int n,t;
int jj[50][50];
int ji()
{
    for (int i = 1; i <= n; i++) {
        int ma = i;
        for (int j = 1; j <= n; j++) {
            if (j < i && jj[j][j]) {
                continue;
            }
            if (jj[j][i] >jj[ma][i]) {
                ma = j;
            }
        }
        for (int j = 1; j <= n + 1; j++) {
            swap(jj[ma][j], jj[i][j]);
        }
        if (jj[i][i]) {
            for (int j = 1; j <= n; j++) {
                if (i != j) {
                    int r = jj[j][i] / jj[i][i];
                    for (int k = i; k <= n + 1; k++) {
                        jj[j][k] ^= jj[i][k] * r;
                    }
                }
            }
        }
    }
    int res = 1;
    if (n + 1 > 0)
    {
        for (int i = 1; i <= n; i++) 
        {
            bool allZero = true;
            for (int j = 1; j <= n; j++) {
                if (jj[i][j]) {
                    allZero = false;
                    break;
                }
            }
            if (allZero && jj[i][n + 1]) {
                return -1; // 无解情况
            }
            if (allZero) {
                res *= 2; // 统计自由元个数，顺便进行2^k求解
            }
        }
    }
    return res;
}
signed main()
{
    scanf("%d", &t);
    while(t--)
    {
        scanf("%d", &n);
        memset(jj,0,sizeof jj);
        for(int i = 1 ;i<=n ;i++)
        {
            scanf("%d", &jj[i][n + 1]);
        }
        int x,y;
        for(int i = 1 ;i<=n ;i++)
        {
            scanf("%d", &x);
            jj[i][n+1]^=x;
            jj[i][i] = 1;
        }
        while(1)
        {
            cin>>x>>y;
            if(x+y==0)
            {
                break;
            }
            jj[y][x] = 1;

        }
        int sum = ji();
        if(sum == -1)
        {
            printf("Oh,it's impossible~!!\n");
        }
        else
        {
            printf("%d\n", sum);
        }
    }
}